PKGSRC_FORTRAN=			gfortran
FAM_DEFAULT=			gamin
PREFER_NATIVE=			yes
PKGSRC_COMPILER?=		gcc
X11_TYPE=			native
#############CLANG
#USE_SSP=			no
#INSTALL_UNSTRIPPED=		yes
#############CLANG
PKG_INFO?=			/usr/sbin/pkg_info
DISTDIR?=			/fserver/distfiles
LOCALPATCHES=			/usr/localpatches.${OS_VERSION:R}
WRKOBJDIR?=                     /usr/work
PREFIX?=			/usr/pkg
ALLOW_VULNERABLE_PACKAGES=	yes
PKGPATH?=			""
WARNS=				0
PKGREPOSITORY?=			/usr/${OPSYS}-${OS_VERSION}/packages
STAGE_PKGFILE=			${PKGREPOSITORY}/${FILEBASE}-${PKGVERSION}${PKG_SUFX}
#INSTALL_TEMPLATES+=		/etc/mk/updatepkgdb
#DEINSTALL_TEMPLATES+=		/etc/mk/updatepkgdb

NCPU!=				echo $$(eval sysctl -n hw.ncpu) + 2 | bc
MAKE_JOBS?=			${NCPU}
MAKE_JOBS_SAFE=			yes

CXXFLAGS+=			-Wno-narrowing

.if ${PKGPATH:M*/libfreehand}
CXXFLAGS+=			-std=c++11
.endif

CFLAGS+=			-march=i486
CFLAGS+=			-Wno-error

.if ${PKGSRC_COMPILER:Mclang}
CPPFLAGS+=			-Wno-missing-noreturn
CPPFLAGS+=			-Wno-format-nonliteral
CPPFLAGS+=			-Wno-deprecated-register
CPPFLAGS+=			-Wno-uninitialized
.else
CPPFLAGS+=			-Wno-unused-local-typedefs
CPPFLAGS+=			-Wno-undef
CPPFLAGS+=			-Wno-deprecated-declarations
CPPFLAGS+=			-Wno-maybe-uninitialized
CPPFLAGS+=			-Wno-unused-function
CXXFLAGS+=			-Wno-delete-non-virtual-dtor
.endif

CFLAGS+=			-mtune=generic
CFLAGS+=			-Wno-unused-value
LDFLAGS+=			-Wl,-no-keep-memory -Wl,-reduce-memory
CXXFLAGS+=			-Wno-undef
CXXFLAGS+=			-Wno-shadow
CXXFLAGS+=			-Wno-strict-aliasing
CXXFLAGS+=			-Wno-unused-variable
CXXFLAGS+=			-Wno-unused-value
CXXFLAGS+=			-Wno-unused-function


#NO_CHECKSUM=			yes

#.include "/etc/mk/builtins.mk"
#######BUILTINS NOOOOOOOOOOOO############
USE_BUILTIN.gettext:=		no
USE_BUILTIN.openssl:=		no
USE_BUILTIN.sqlite3:=		yes
USE_BUILTIN.bzip:=		yes
USE_BUILTIN.xz:=		yes
USE_BUILTIN.zlib:=		yes

############LICENCES#############
ACCEPTABLE_LICENSES+=		gnu-agpl-v3
ACCEPTABLE_LICENSES+=		sun-jdk6-license
ACCEPTABLE_LICENSES+=		eclipse-license
ACCEPTABLE_LICENSES+=		rar-license
ACCEPTABLE_LICENSES+=		lame-license
ACCEPTABLE_LICENSES+=		flash-license
ACCEPTABLE_LICENSES+=		adobe-flashsupport-license
ACCEPTABLE_LICENSES+=		mplayer-codec-license
ACCEPTABLE_LICENSES+=		sun-jre6-license
ACCEPTABLE_LICENSES+=		sun-openlook-license
ACCEPTABLE_LICENSES+=           sendmail-license
ACCEPTABLE_LICENSES+=		xv-license

###############################################
PKG_RESUME_TRANSFERS=		YES
PATCH_FUZZ_FACTOR=		-F2

############OPTIONS###############
PKG_DEFAULT_OPTIONS=			-alsa -esound -inet6 -gssapi pulseaudio -nas
PKG_DEFAULT_OPTIONS+=			-polkit -consolekit sqlite3 x11 introspection
PGSQL_VERSION_DEFAULT=			94
PGSQL_VERSION_REQD=			94
PKG_OPTIONS.ssl=			zlib
PKG_OPTIONS.sox=			lame
PKG_OPTIONS.postgresql94=		xml
PKG_OPTIONS.xulrunner=			gnome
PKG_OPTIONS.ffmpeg=			lame ass libvpx theora vorbis x264 xvid
PKG_OPTIONS.sendmail=          		sasl
PKG_OPTIONS.boehm-gc=			threads
PKG_OPTIONS.pulseaudio=			fftw
PKG_OPTIONS.SDL=			-esound -nas
PKG_OPTIONS.thunderbird=		gnome
PKG_OPTIONS.gtk2=			cups
PKG_OPTIONS.gtk3=			cups
PKG_OPTIONS.vlc=			gnome
PKG_OPTIONS.xterm=			pcre
PKG_OPTIONS.firefox=			webrtc
PKG_OPTIONS.drupal=			-apache sqlite pgsql mysql unicode
PKG_OPTIONS.lighttpd=			fam bzip2
##########DEFINES################

OS_VERSION?=	""

.if ${PKGPATH:M*/mate-applets} || \
	${PKGPATH:M*/nss} || \
	${PKGPATH:M*/libusb*} || \
	${PKGPATH:Marchivers/bzip2} || \
	${PKGPATH:M*/cdrtools*} || \
	${PKGPATH:M*/muparser*} || \
	${PKGPATH:M*/tightvnc*} || \
	${PKGPATH:M*/vnc*} || \
	${PKGPATH:M*/pth*} || \
	${PKGPATH:M*/GConf-ui*} || \
	${PKGPATH:M*/gdbm}
MAKE_JOBS=			1
MAKE_JOBS_SAFE=			no
.endif

#.if ${PKGPATH:M*/caja*} || \
#	${PKGPATH:M*/pluma*} || \
#	${PKGPATH:M*/gimp*} || \
#	${PKGPATH:M*/gnome-vfs} || \
#	${PKGPATH:M*/libgnomeui*}
#.include "../../sysutils/gvfs/buildlink3.mk"
#.endif

PKG_OPTIONS.MesaLib=		-dri
PKG_OPTIONS.qt4=		cups gtk2
PKG_OPTIONS.graphviz=		rsvg

.if ${PKGPATH:Msysutils/hal}
CONFIGURE_ARGS+=		--disable-console-kit
CONFIGURE_ARGS+=		--disable-policy-kit
.endif

.if ${PKGPATH:Mmeta-pkgs/gnome}
DEPENDS+=       mozilla-rootcerts:../../security/mozilla-rootcerts
.endif

.if ${PKGPATH} == "devel/xulrunner192"
CFLAGS+=			-Wno-format-extra-arg
CFLAGS+=			-Wno-undef -Wno-unused-variable -Wno-unused-but-set-variable
CFLAGS+=			-Wno-unused-function -Wno-shadow -Wno-redundant-decls
CFLAGS+=			-Wno-maybe-uninitialized -Wno-enum-compare
.endif

.if ${PKGPATH:M*/webkit24-gtk*}
CONFIGURE_ARGS+=       --disable-silent-rules
SUBST_CLASSES+=		libatomic
SUBST_MESSAGE+=		FIX LIBATOMIC OPS change -latomic to -latomic_ops
SUBST_STAGE.libatomic=	pre-configure
SUBST_FILES.libatomic=	configure
SUBST_SED.libatomic=	-e "s/-latomic/-latomic_ops/"
.include "../../devel/libatomic_ops/buildlink3.mk"
.endif

.if ${PKGPATH} == "devel/anjuta"
CFLAGS+=			-Wno-error=format-extra-args
CFLAGS+=			-Wno-deprecated-declarations
CFLAGS+=			-Wno-char-subscripts
CFLAGS+=			-Wno-unused-but-set-variable
CFLAGS+=			-Wno-char-subscripts
CFLAGS+=			-Wno-maybe-uninitialized
CFLAGS+=			-Wno-missing-prototypes
CFLAGS+=			-Wno-unused-variable
CFLAGS+=			-Wno-strict-prototypes
CFLAGS+=			-Wno-unused-function
CFLAGS+=			-Wno-error=format-zero-length
CFLAGS+=			-Wno-error=format=
.endif

.if	${PKGPATH:M*/libtheora} || \
	${PKGPATH:M*/x264-devel} || \
	${PKGPATH:Mmultimedia/ffmpeg*}
CONFIGURE_ARGS+=	--disable-asm
.endif

.if ${PKGPATH:M*/ruby*}
CONFIGURE_ARGS+=	--disable-dtrace
.endif

.if ${PKGPATH} == "audio/aumix-gtk"
.include		"../../graphics/hicolor-icon-theme/buildlink3.mk"
.endif

.if	${PKGPATH:M*/evolution-data-server*}
.include "../../security/libgcrypt/buildlink3.mk"
.include "../../security/libgpg-error/buildlink3.mk"
.endif

#.if	${PKGPATH:M*/firefox*} || \
#	${PKGPATH:M*/thunderbird*} || \
#	${PKGPATH:M*/tightvnc*} || \
#	${PKGPATH:M*/librecad} || \
#	${PKGPATH:M*/vlc} || \
#	${PKGPATH:M*/liblangtag}
#PKGSRC_COMPILER:=	gcc
#.endif

#.if ${PKGSRC_COMPILER:Mclang*}
#HAVE_LLVM=			yes
#.endif

rmstage: build-clean
	@echo rmstage ...  DONE
	cd ${WRKDIR};\
	rm -rf .install_done .destdir .build_done .pkginstall .pkgdb .PLIST* .PLIST_deps .package_done
	rm -f ${STAGE_PKGFILE}

showpkgname:
	@echo ${PKGNAME}
